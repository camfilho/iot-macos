version: '3'

services:

  jupyter-notebook-pyspark:
    image: jupyter/pyspark-notebook:spark-3.4.1
    ports:
      - '8888:8888'
      - '4040:4040'
    volumes:
      - ./data:/home/jovyan/work/data:rw
      - ./jars:/home/jovyan/work/jars:rw
      - ./jobs:/home/jovyan/work/jobs:rw
      - ./notebooks:/home/jovyan/work/notebooks
      - ./scripts:/home/jovyan/work/scripts:rw
    user: root
    environment:
      - GRANT_SUDO=yes
      - JUPYTER_TOKEN=tad
      - SPARK_MASTER=spark://spark:7077
    networks:
      - spark-network
    restart: on-failure

  spark:
    image: docker.io/bitnami/spark:3.4.1
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - GRANT_SUDO=yes
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - spark-network
    restart: on-failure
    volumes:
      - ./data:/home/jovyan/work/data:rw
      - ./jars:/home/jovyan/work/jars:rw
    user: root
      

  spark-worker:
    image: docker.io/bitnami/spark:3.4.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - GRANT_SUDO=yes
    networks:
      - spark-network
    restart: on-failure
    ports:
      - '8081:8081'
    volumes:
      - ./data:/home/jovyan/work/data:rw
      - ./jars:/home/jovyan/work/jars:rw
    user: root

  mariadb:
    image: mariadb:10.7
    ports:
      - 3306:3306
    volumes:
      - "./config/mariadb:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
      - MYSQL_DATABASE=data
    restart: on-failure
    networks:
      - spark-network

  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
      - "9093:9093"
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    user: root
    environment:
      - GRANT_SUDO=yes
      # KRaft settings
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - spark-network
      - kafka-network
    restart: on-failure

  python-socket:
    build:
      context: .
    ports:
      - "1500:1500"
    environment:
      - SOCKET_PORT=1500
      - BOOTSTRAP_SERVERS=kafka:9092
      - WAIT_TIME=80
      - KAFKA_TOPIC=iot_source
    networks:
      - kafka-network
    restart: on-failure
    depends_on:
      - kafka
      
networks:
  spark-network:
    external: true
    driver: bridge
  kafka-network:
    driver: bridge

volumes:
  kafka_data:
    driver: local
  redis:
    driver: local